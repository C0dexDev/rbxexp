local Players = game:GetService("Players")
local char = game.Players.LocalPlayer.Character
local head = char.Head
local destPos = Vector3.new(-6011, 1, 4281)

local finish = false

local function GetNearestPlayer()
	local nearestPlayer = nil
	local nearestDist = nil
	for _,p in Players:GetPlayers() do
		local pChar = p.Character
		if p == Players.LocalPlayer or not pChar or not pChar.PrimaryPart then continue end
		local charDistance = (char.PrimaryPart.Position - pChar.PrimaryPart.Position).Magnitude
		local destDistance = (pChar.PrimaryPart.Position - destPos).Magnitude
		if (nearestDist == nil or charDistance < nearestDist) and destDistance <= 250 then
			nearestPlayer = p
			nearestDist = charDistance
			print("FOUND")
		end
	end
	return nearestPlayer
end

task.spawn(function()
	while task.wait() do
		if finish then break end
		char.Head.CFrame = CFrame.new(Vector3.new(-6011, 1, 4281) + Vector3.new(0,5,0))
	end
end)
task.wait(.5)
local victim = nil
repeat
	victim = GetNearestPlayer()
	task.wait()
until victim ~= nil
finish = true
local targetChar = victim.Character
local targetHum = targetChar and targetChar:FindFirstChildOfClass("Humanoid")
local ragdollPart = targetChar and targetChar:FindFirstChild("RagdollColliderParts") and targetChar.RagdollColliderParts:FindFirstChildWhichIsA("BasePart")
ReplicatedStorage:WaitForChild("SpecialAttackRemoteEvent_PounceAttack"):FireServer(targetHum,ragdollPart)
print("POUNCE")
repeat
	ReplicatedStorage:WaitForChild("SpecialAttackRemoteEvent_PounceAttack"):FireServer(targetHum,ragdollPart)
	task.wait()
	print("POUNCE")
until (char.PrimaryPart.Position - targetChar.PrimaryPart.Position).Magnitude <= 10
ReplicatedStorage:WaitForChild("SpecialAttackRemoteEvent_PounceAttack"):FireServer("Cancel")
